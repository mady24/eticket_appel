
class TicketService {
     route_root = '';
     routes = {};
    constructor() {
        this.route_root = "https://api.eticket.sn/eticket"
        this.routes = {
            "simulate-code": "/home-app/simulate/terminal-access-code",
            "simulate-notification": "/home-app/simulate/notification",
            "notification-tocken": "/home-app/notification-token/",
        }
    }

    simulateCode() {
        /*var request = new XMLHttpRequest();
        request.open("GET", this.route_root + this.routes["simulate-code"], true);*/
        //request.setRequestHeader("Accept","*!/!*");
        /*request.onreadystatechange = function () {
            console.log(this);
        }
        console.log(request);
        request.send();*/


        ////
        const xhr = new XMLHttpRequest();
        xhr.withCredentials = false;

        xhr.addEventListener("readystatechange", function () {
            if (this.readyState === this.DONE) {
                console.log(this.responseText);
            }
        });

        xhr.open("GET", "https://api.eticket.sn/eticket/home-app/simulate/terminal-access-code");
        xhr.setRequestHeader("accept", "*!/!*");

        xhr.send();

    }

    simulateNotification() {
        var request = new XMLHttpRequest();
        request.open("GET", this.route_root + this.routes["simulate-notification"], true);
        request.onreadystatechange = function () {
            console.log(this);
        }
        request.send();
    }

    simulateToken(jwtoken) {
        var request = new XMLHttpRequest();
        request.open("POST","https://api.eticket.sn/eticket/home-app/notification-token/BNEQOtyPxMECvuYexToS5Idmuct7WeuFiMP7QREsEN-nMvT6EDHzHgY18gMKX2l7fJNwqWHi6-owDqvt7-N5yZo", true);
        request.setRequestHeader('Authorization', 'Bearer ' + jwtoken);
        request.onreadystatechange = function () {
            console.log(this);
        }
        request.send();
    }
}

ticketSerice = new TicketService();


/!*if (!sessionStorage.getItem("token")){
    ticketSerice.simulateCode();
    location.href = location.protocol + '//' + location.host + '/login.html';
} else {
    ticketSerice.simulateToken(sessionStorage.getItem("token"));
}*!/

var calledTicketsSection = document.getElementById('calledTickets');
var lastTicketCalled = document.getElementById('lastTicketCalled');

var tickets = [
    { "service": "Caisse", "ticket": "1" },
    { "service": "Caisse", "ticket": "2" },
    { "service": "Caisse", "ticket": "3" },
    { "service": "Caisse", "ticket": "4" },
    { "service": "Caisse", "ticket": "5" },
    { "service": "Caisse", "ticket": "6" },
    { "service": "Caisse", "ticket": "7" },
    { "service": "Caisse", "ticket": "8" },
    { "service": "Caisse", "ticket": "9" }
];

var ticket = { "service": "Caisse", "ticket": "10" };

var index = 10;

setTickets();
setActualTicket();

function setTickets() {
    tickets.forEach(t => {
        calledTicketsSection.innerHTML += setTicketTemplate(t.service, t.ticket, "old");
    });
}

function setActualTicket() {
    lastTicketCalled.innerHTML = setTicketTemplate(ticket.service, ticket.ticket, "actual");
    lastTicketCalled.classList.add('text-white');
    setBackground().then(() => {
        document.getElementById('actual').style.backgroundColor = "#FFFFFF";
        lastTicketCalled.classList.remove('text-white');
    }
    );
}

function setTicketTemplate(service, number, actual) {
    return `<div class="card p-1 border-0" id="${actual}">
    <div class="card-body border rounded row p-0 m-0 text-center">
      <div class="col-6 p-0">
        <b>Service:</b><br /> ${service}
      </div>
      <div class="col-6 p-0">
        <b>Clients:</b><br /> ${number}
      </div>
    </div>
    </div>`;
}

async function setBackground() {
    for (let i = 1; i <= 10; i++) {
        document.getElementById('actual').style.backgroundColor = "rgb(0, 0, " + (Math.floor(Math.random() * 255)) + ")";
        await delay(i == 1 ? 0 : 1000)
    }
}

function delay(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}
